# ---> Proneer
# Exclude System Files
*.DS_Store
*.swp

# Exclude Images
*.jpg
*.jpeg
*.png

# Exclude ML Model Files
*.pth
*.caffemodel
*.prototxt

# Exclude Python Files

## Byte-compiled / optimized / DLL files
**/__pycache__
*.py[cod]
*$py.class

## C extensions
*.so

## Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

## PyInstaller
##  Usually these files are written by a python script from a template
##  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

## Installer logs
pip-log.txt
pip-delete-this-directory.txt

## Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

## Translations
*.mo
*.pot

## Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

## Flask stuff:
instance/
.webassets-cache

## Scrapy stuff:
.scrapy

## Sphinx documentation
docs/_build/

## PyBuilder
.pybuilder/
target/

## Jupyter Notebook
.ipynb_checkpoints

## IPython
profile_default/
ipython_config.py

## pyenv
##   For a library or package, you might want to ignore these files since the code is
##   intended to run in multiple environments; otherwise, check them in:
 .python-version

## pipenv
##   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
##   However, in case of collaboration, if having platform-specific dependencies or dependencies
##   having no cross-platform support, pipenv may install dependencies that don't work, or not
##   install all needed dependencies.
##Pipfile.lock

## PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

## Celery stuff
celerybeat-schedule
celerybeat.pid

## SageMath parsed files
*.sage.py

## Environments
*.env
*.venv
*env/
*venv/
*ENV/
*env.bak/
*venv.bak/

## Spyder project settings
.spyderproject
.spyproject

## Rope project settings
.ropeproject

## mkdocs documentation
/site

## mypy
.mypy_cache/
.dmypy.json
dmypy.json

## Pyre type checker
.pyre/

## pytype static type analyzer
.pytype/

## Cython debug symbols
cython_debug/

# Exclude Git Files
.git

# Exclude VScode File
.vscodes
__debug_bin
*.vsix

# Exclude IntelliJ
.idea

# Exclude Cmake
CMakeLists.txt.user
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps

# Exclude CUDA
*.i
*.ii
*.gpu
*.ptx
*.cubin
*.fatbin

# Exclude Composer
composer.phar
/vendor/

# Commit your application's lock file https://getcomposer.org/doc/01-basic-usage.md#commit-your-composer-lock-file-to-version-control
# You may choose to ignore a library lock file http://getcomposer.org/doc/02-libraries.md#lock-file
# composer.lock

# Exclude Compiled Object Files, Static and Dynamic Libs
*.o
*.a
*.so

# Exlucde Databases and Logs
*.db
*.log

# Exclude Go

## Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

## Test binary, built with `go test -c`
*.test

## Output of the go coverage tool, specifically when used with LiteIDE
*.out

## Dependency directories (remove the comment below to include it)
## vendor/

# Exclude Snapcraft Files
snap/.snapcraft/
parts/
stage/
prime/
*.snap
*.snap-build
*_source.tar.bz2

# Exclude Test Data Directories
/dev-server/tests



