FROM registry.dev.proneer.co/dev-gpu:latest

######## VSCODE ###########

USER root

### Technical Environment Variables
ENV \
    DEBIAN_FRONTEND=noninteractive \
    RESOURCES_PATH="/resources" \
    SCRIPTS_PATH="/scripts" \
    APPS_PATH="/apps" \
    DATA_PATH="/data" \
    WORKSPACE_HOME="/workspace"

### Install VScode server
RUN \
    curl -fsSL https://code-server.dev/install.sh | bash \
    # Cleanup
    && clean-layer.sh

### Install Filebrowser
RUN \
    curl -fsSL https://filebrowser.org/get.sh | bash \
    # Cleanup
    && clean-layer.sh

### Fix logging
RUN sed -i '/imklog/s/^/#/' /etc/rsyslog.conf

### Copy some configuration files
# copy system scripts
COPY scripts/__init__.py $SCRIPTS_PATH
COPY scripts/docker-entrypoint.py /
COPY scripts/functions.py $SCRIPTS_PATH
COPY scripts/run_workspace.py $SCRIPTS_PATH
COPY scripts/setup_ssh.py $SCRIPTS_PATH
COPY scripts/configure_user.py $SCRIPTS_PATH
COPY scripts/configure_cron.py $SCRIPTS_PATH
COPY scripts/backup_restore_config.py $SCRIPTS_PATH
# copy supervisor configs
COPY configs/supervisor/conf.d /etc/supervisor/conf.d/
COPY configs/supervisor/supervisord.conf /etc/supervisor/supervisord.conf
# copy custom libraries
COPY scripts/conda_parser.py $SCRIPTS_PATH
COPY scripts/users_mod.py $SCRIPTS_PATH
# copy user scripts
COPY scripts/configure_ssh.py $SCRIPTS_PATH
COPY scripts/configure_zsh.py $SCRIPTS_PATH
COPY scripts/configure_vscode.py $SCRIPTS_PATH
COPY scripts/configure_filebrowser.py $SCRIPTS_PATH
COPY scripts/configure_caddy.py $SCRIPTS_PATH
COPY scripts/configure_app.py $SCRIPTS_PATH
COPY scripts/setup_workspace.py $SCRIPTS_PATH
# copy main config file
#COPY scripts/config.yaml $SCRIPTS_PATH
# copy yaml validator schema
COPY scripts/schema.yaml $SCRIPTS_PATH

######## MAGENTO ###########

### Install Dependencies
RUN \
    apt-get autoremove \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        apache2 \
        mysql-server \
        php7.4 \
        libapache2-mod-php \
        php-mysql \
        php7.4-mbstring
    # Cleanup
    && clean-layer.sh

### Install phpMyAdmin
RUN \
    apt-get autoremove \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        phpmyadmin \
        php-zip \
        php-gd \
        php-json \
        php-curl
    # Cleanup
    && clean-layer.sh

FROM php:7.4-fpm

# Configure the gd library
RUN apt-get update; \
    apt-get install -y \
        git \
        build-essential \
        libjpeg-dev \
        libpng-dev \
        libfreetype6-dev \
        zlib1g-dev \
        g++ \
        libmcrypt-dev \
        libxslt1-dev \
        libsodium-dev \
        libargon2-0-dev \
        libjpeg62-turbo-dev \
        libonig-dev \
        libssl-dev \
        libzip-dev \
        libicu-dev; \
    # First, try installing the old way, else switch to PHP 7.4 style
    ( \
        docker-php-ext-configure gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr \
        || docker-php-ext-configure gd --with-freetype --with-jpeg; \
    ); \
    docker-php-ext-install -j$(nproc) \
        gd \
        intl \
        mbstring \
        pdo \
        pdo_mysql \
        phar \
        xsl \
        zip \
        bcmath \
        dom \
        soap \
        sockets

# Install NODEJS
RUN curl -sL https://deb.nodesource.com/setup_lts.x | bash -; \
    apt-get install -y nodejs

# Install GOSU , SMTP and other packages
RUN apt-get install -y \
    gosu \
    bc \
    msmtp \
    msmtp-mta

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=1.10.17

# Install Magerun2 from n98
RUN curl -O https://files.magerun.net/n98-magerun2.phar; \
    chmod +x ./n98-magerun2.phar; \
    mv ./n98-magerun2.phar /usr/local/bin/n98-magerun2

ENTRYPOINT ["python3", "/docker-entrypoint.py"]